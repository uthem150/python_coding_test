# 코딩 테스트에서는 종종 N의 범위가 100억 이상으로 매우 크게 주어지는 경우가 있습니다. 
# 그런 상황을 대비하여, 1씩 빼는 과정을 한 번의 계산으로 단축하는 코드를 작성하는 연습을 해보면 좋습니다.

n, k = map(int, input().split())
result = 0

while True:
    # n을 k로 나눈 나머지만큼 1을 빼야 함. 
    # 그 나머지를 target으로 잡는게 아니라, n에서 뺄 값으로 바로 사용.
    # 하지만 그 전에 n이 k의 배수가 되는 target을 먼저 구함.
    target = (n // k) * k
    
    # 1을 빼는 횟수를 한 번에 계산하여 더함
    result += (n - target)
    
    # n을 target 값으로 변경
    n = target
    
    # n이 k보다 작아지면 (더 이상 나눌 수 없으면) 반복문 탈출
    if n < k:
        break
        
    # 나누기 연산 1회 수행
    result += 1
    n //= k

# 반복문을 나온 후, 남은 값(1이 아닌)에 대해 1로 만드는 연산 횟수 추가
result += (n - 1)

print(result)


N=17, K=4 예시
시작: n = 17, k = 4, result = 0

루프 1:
target = (17 // 4) * 4 = 16
result = 0 + (17 - 16) = 1
n = 16
16 < 4는 거짓.
result = 1 + 1 = 2 (나누기)
n = 16 // 4 = 4

루프 2:
target = (4 // 4) * 4 = 4
result = 2 + (4 - 4) = 2
n = 4
4 < 4는 거짓.
result = 2 + 1 = 3 (나누기)
n = 4 // 4 = 1

루프 3:
target = (1 // 4) * 4 = 0
result = 3 + (1 - 0) = 4
n = 0
0 < 4는 참. break로 루프 탈출.

루프 후:
result += (n - 1)
현재 n은 1입니다. (루프를 빠져나오기 직전에 n=1이었음)
result += (1 - 1)
최종 결과: 3
